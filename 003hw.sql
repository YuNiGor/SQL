-- Ограничения в базе данных:

-- PRIMARY KEY (Первичный ключ): Ограничение, которое задается для одного или нескольких столбцов таблицы, чтобы обеспечить уникальность значений и идентифицировать уникальные записи в таблице.

-- FOREIGN KEY (Внешний ключ): Ограничение, которое связывает столбец или группу столбцов в одной таблице с первичным ключом или уникальным ключом в другой таблице.
-- Он обеспечивает целостность ссылочной целостности данных между связанными таблицами.

-- NOT NULL (Не может быть NULL): Ограничение, которое применяется к столбцу и требует, чтобы он всегда содержал непустое значение.

-- UNIQUE (Уникальное): Ограничение, которое требует, чтобы значения в столбце (или группе столбцов) были уникальными, то есть не повторялись в таблице.

-- CHECK (Проверка): Ограничение, которое определяет условие, которому должны соответствовать значения в столбце. Если условие не выполняется, то вставка или изменение данных будет отклонено.

-- Дефолтное значение (DEFAULT) в базе данных - это значение, которое будет автоматически присвоено столбцу, если при вставке новой строки не указано другое значение для этого столбца.
-- Например, если у нас есть столбец "age" типа INT и у него установлено дефолтное значение 18, то если мы не указываем возраст при вставке нового пользователя в таблицу,
-- столбец "age" будет автоматически заполнен значением 18.

-- Пример:

CREATE TABLE users (
  id INT PRIMARY KEY,
  name VARCHAR(50),
  age INT DEFAULT 18
);

-- UNION и UNION ALL - это операторы в SQL, которые объединяют результаты двух или более SELECT-запросов.

-- UNION: Оператор UNION объединяет результаты SELECT-запросов и удаляет дубликаты строк из результирующего набора. Если есть одинаковые строки в результатах разных запросов,
-- только одна из них будет включена в итоговый результат.

-- Пример:

SELECT name FROM table1
UNION
SELECT name FROM table2;

-- UNION ALL: Оператор UNION ALL также объединяет результаты SELECT-запросов, но не удаляет дубликаты строк. Все строки из каждого запроса будут включены в итоговый результат.

-- Пример:

SELECT name FROM table1
UNION ALL
SELECT name FROM table2;

-- Разница между UNION и UNION ALL заключается в том, что UNION выполняет операцию дедубликации, что может привести к некоторому снижению производительности,
-- в то время как UNION ALL просто объединяет все строки из разных запросов без проверки на дубликаты. Если вам нужны все строки из разных запросов, включая возможные дубликаты,
-- используйте UNION ALL для лучшей производительности.